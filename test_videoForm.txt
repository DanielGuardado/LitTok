import React from "react";
import DropZone from "react-dropzone";
import { Link } from "react-router-dom";

class VideoForm extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      description: "",
      videoFile: null,
      uploader_id: this.props.currentUser.id,
      videoUrl: null,
    };
  }

  handleInput(field) {
    return (e) => this.setState({ [field]: e.currentTarget.value });
  }

  handleFile(e) {
    const file = e.currentTarget.files[0];
    const fileReader = new FileReader();
    fileReader.onloadend = () => {
      this.setState({ videoFile: file, videoUrl: fileReader.result });
    };
    if (file) {
      fileReader.readAsDataURL(file);
    }
  }

  handleSubmit(e) {
    e.preventDefault();
    const formData = new FormData();
    formData.append("video[description]", this.state.description);
    formData.append("video[uploader_id]", this.state.uploader_id);
    if (this.state.videoFile) {
      formData.append("video[video]", this.state.videoFile);
    }
    this.props.createVideo(formData);
  }
  // handleSubmit(e) {
  //   e.preventDefault();
  //   const formData = new FormData();
  //   formData.append("video[description", this.state.description);
  //   formData.append("video[uploader_id]", this.state.uploader_id);
  //   if (this.state.videoFile) {
  //     formData.append("video[video]", this.state.videoFile);
  //   }
  //   this.props.createVideo(formData);
  // }

  errs() {
    let errors = this.props.errors ? this.props.errors : "";
    let errorMessages = errors.map((error, idx) => (
      <div key={idx}>{error}</div>
    ));
    return <div>{errorMessages}</div>;
  }

  videoUploadForm() {
    return (
      <div>
        <form onSubmit={this.handleSubmit.bind(this)}>
          <h2 className="bold">Log in</h2>
          <label htmlFor="description">Caption</label>
          <input
            type="text"
            name="description"
            onChange={this.handleInput("description")}
            value={this.state.description}
          />
          <button type="submit">Upload</button>
        </form>
        <button onClick={this.discard}>Discard</button>
      </div>
    );
  }

  discard(){
    this.setState = {
      description: "test",
      videoFile: null,
      uploader_id: this.props.currentUser.id,
      videoUrl: null,
    };
  }

  onDrop = (acceptedFiles) => {
    const file = acceptedFiles[0];
    const fileReader = new FileReader();
    fileReader.onloadend = () => {
      this.setState({ videoFile: file, videoUrl: fileReader.result });
    };
    if (file) {
      fileReader.readAsDataURL(file);
    }
  };

  nav() {
    return (
      <div className="navbar2 underline flex space-between">
        <Link to="/">
          <img src={window.logo} alt="littok" height="40" width="150" />
        </Link>
      </div>
    );
  }

  dropZone() {
    return (
      <div className="boxy">
        <DropZone onDrop={this.onDrop}>
          {({ getRootProps, getInputProps }) => (
            <div {...getRootProps()} className="heightUpload">
              <input {...getInputProps()} />
            </div>
          )}
        </DropZone>
      </div>
    );
  }

  render() {
    return (
      <div className="push-down">
        {this.nav()}
        <h1>Upload video</h1>
        <p>
          This video will be published to @{this.props.currentUser.username}
        </p>
        {this.videoUploadForm()}
        {this.dropZone()}
        {this.errs()}
      </div>
    );
  }
}
export default VideoForm;
